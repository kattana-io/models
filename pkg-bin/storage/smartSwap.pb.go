// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: smartSwap.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwapType int32

const (
	SwapType_UNDEFINED_TYPE    SwapType = 0
	SwapType_PAIR_SWAP         SwapType = 1
	SwapType_DIRECT_SWAP       SwapType = 2
	SwapType_PROXY_PAIR_SWAP   SwapType = 3
	SwapType_PROXY_DIRECT_SWAP SwapType = 4
)

// Enum value maps for SwapType.
var (
	SwapType_name = map[int32]string{
		0: "UNDEFINED_TYPE",
		1: "PAIR_SWAP",
		2: "DIRECT_SWAP",
		3: "PROXY_PAIR_SWAP",
		4: "PROXY_DIRECT_SWAP",
	}
	SwapType_value = map[string]int32{
		"UNDEFINED_TYPE":    0,
		"PAIR_SWAP":         1,
		"DIRECT_SWAP":       2,
		"PROXY_PAIR_SWAP":   3,
		"PROXY_DIRECT_SWAP": 4,
	}
)

func (x SwapType) Enum() *SwapType {
	p := new(SwapType)
	*p = x
	return p
}

func (x SwapType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwapType) Descriptor() protoreflect.EnumDescriptor {
	return file_smartSwap_proto_enumTypes[0].Descriptor()
}

func (SwapType) Type() protoreflect.EnumType {
	return &file_smartSwap_proto_enumTypes[0]
}

func (x SwapType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwapType.Descriptor instead.
func (SwapType) EnumDescriptor() ([]byte, []int) {
	return file_smartSwap_proto_rawDescGZIP(), []int{0}
}

type SmartSwap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx          string   `protobuf:"bytes,1,opt,name=Tx,proto3" json:"Tx,omitempty"`
	Date        int64    `protobuf:"varint,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Chain       string   `protobuf:"bytes,3,opt,name=Chain,proto3" json:"Chain,omitempty"`
	BlockNumber uint64   `protobuf:"varint,4,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	Protocol    string   `protobuf:"bytes,5,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	Pair        string   `protobuf:"bytes,6,opt,name=Pair,proto3" json:"Pair,omitempty"`
	SrcToken    string   `protobuf:"bytes,7,opt,name=SrcToken,proto3" json:"SrcToken,omitempty"`
	DstToken    string   `protobuf:"bytes,8,opt,name=DstToken,proto3" json:"DstToken,omitempty"`
	Amount0     []byte   `protobuf:"bytes,9,opt,name=Amount0,proto3" json:"Amount0,omitempty"`
	Amount1     []byte   `protobuf:"bytes,10,opt,name=Amount1,proto3" json:"Amount1,omitempty"`
	Buy         bool     `protobuf:"varint,11,opt,name=Buy,proto3" json:"Buy,omitempty"`
	PriceA      string   `protobuf:"bytes,12,opt,name=PriceA,proto3" json:"PriceA,omitempty"`
	PriceAUSD   string   `protobuf:"bytes,13,opt,name=PriceAUSD,proto3" json:"PriceAUSD,omitempty"`
	PriceB      string   `protobuf:"bytes,14,opt,name=PriceB,proto3" json:"PriceB,omitempty"`
	PriceBUSD   string   `protobuf:"bytes,15,opt,name=PriceBUSD,proto3" json:"PriceBUSD,omitempty"`
	Wallet      string   `protobuf:"bytes,16,opt,name=Wallet,proto3" json:"Wallet,omitempty"`
	SwapType    SwapType `protobuf:"varint,17,opt,name=SwapType,proto3,enum=binary.SwapType" json:"SwapType,omitempty"`
	Order       uint32   `protobuf:"varint,18,opt,name=Order,proto3" json:"Order,omitempty"`
	ValueUSD    string   `protobuf:"bytes,19,opt,name=ValueUSD,proto3" json:"ValueUSD,omitempty"`
}

func (x *SmartSwap) Reset() {
	*x = SmartSwap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_smartSwap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartSwap) ProtoMessage() {}

func (x *SmartSwap) ProtoReflect() protoreflect.Message {
	mi := &file_smartSwap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartSwap.ProtoReflect.Descriptor instead.
func (*SmartSwap) Descriptor() ([]byte, []int) {
	return file_smartSwap_proto_rawDescGZIP(), []int{0}
}

func (x *SmartSwap) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *SmartSwap) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *SmartSwap) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *SmartSwap) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *SmartSwap) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SmartSwap) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *SmartSwap) GetSrcToken() string {
	if x != nil {
		return x.SrcToken
	}
	return ""
}

func (x *SmartSwap) GetDstToken() string {
	if x != nil {
		return x.DstToken
	}
	return ""
}

func (x *SmartSwap) GetAmount0() []byte {
	if x != nil {
		return x.Amount0
	}
	return nil
}

func (x *SmartSwap) GetAmount1() []byte {
	if x != nil {
		return x.Amount1
	}
	return nil
}

func (x *SmartSwap) GetBuy() bool {
	if x != nil {
		return x.Buy
	}
	return false
}

func (x *SmartSwap) GetPriceA() string {
	if x != nil {
		return x.PriceA
	}
	return ""
}

func (x *SmartSwap) GetPriceAUSD() string {
	if x != nil {
		return x.PriceAUSD
	}
	return ""
}

func (x *SmartSwap) GetPriceB() string {
	if x != nil {
		return x.PriceB
	}
	return ""
}

func (x *SmartSwap) GetPriceBUSD() string {
	if x != nil {
		return x.PriceBUSD
	}
	return ""
}

func (x *SmartSwap) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *SmartSwap) GetSwapType() SwapType {
	if x != nil {
		return x.SwapType
	}
	return SwapType_UNDEFINED_TYPE
}

func (x *SmartSwap) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SmartSwap) GetValueUSD() string {
	if x != nil {
		return x.ValueUSD
	}
	return ""
}

var File_smartSwap_proto protoreflect.FileDescriptor

var file_smartSwap_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x22, 0xf9, 0x03, 0x0a, 0x09, 0x53, 0x6d,
	0x61, 0x72, 0x74, 0x53, 0x77, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x72, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x72, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x44, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x12,
	0x10, 0x0a, 0x03, 0x42, 0x75, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x42, 0x75,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x50, 0x72, 0x69, 0x63, 0x65, 0x41, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x41, 0x55, 0x53, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x41, 0x55, 0x53, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x42, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x55, 0x53, 0x44, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x55, 0x53, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x53, 0x77, 0x61, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x2e, 0x53, 0x77, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x53, 0x77, 0x61, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x55, 0x53, 0x44, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x55, 0x53, 0x44, 0x2a, 0x6a, 0x0a, 0x08, 0x53, 0x77, 0x61, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x41, 0x49, 0x52, 0x5f, 0x53, 0x57,
	0x41, 0x50, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x53,
	0x57, 0x41, 0x50, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x50,
	0x41, 0x49, 0x52, 0x5f, 0x53, 0x57, 0x41, 0x50, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52,
	0x4f, 0x58, 0x59, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x57, 0x41, 0x50, 0x10,
	0x04, 0x42, 0x12, 0x5a, 0x10, 0x2f, 0x70, 0x6b, 0x67, 0x2d, 0x62, 0x69, 0x6e, 0x2f, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_smartSwap_proto_rawDescOnce sync.Once
	file_smartSwap_proto_rawDescData = file_smartSwap_proto_rawDesc
)

func file_smartSwap_proto_rawDescGZIP() []byte {
	file_smartSwap_proto_rawDescOnce.Do(func() {
		file_smartSwap_proto_rawDescData = protoimpl.X.CompressGZIP(file_smartSwap_proto_rawDescData)
	})
	return file_smartSwap_proto_rawDescData
}

var file_smartSwap_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_smartSwap_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_smartSwap_proto_goTypes = []interface{}{
	(SwapType)(0),     // 0: binary.SwapType
	(*SmartSwap)(nil), // 1: binary.SmartSwap
}
var file_smartSwap_proto_depIdxs = []int32{
	0, // 0: binary.SmartSwap.SwapType:type_name -> binary.SwapType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_smartSwap_proto_init() }
func file_smartSwap_proto_init() {
	if File_smartSwap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_smartSwap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartSwap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_smartSwap_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_smartSwap_proto_goTypes,
		DependencyIndexes: file_smartSwap_proto_depIdxs,
		EnumInfos:         file_smartSwap_proto_enumTypes,
		MessageInfos:      file_smartSwap_proto_msgTypes,
	}.Build()
	File_smartSwap_proto = out.File
	file_smartSwap_proto_rawDesc = nil
	file_smartSwap_proto_goTypes = nil
	file_smartSwap_proto_depIdxs = nil
}
